name: Build & Release Stupid Simple Backend

permissions:
  contents: write

on:
  push:
    tags:
      - "v*"   # run on version tags like v1.0.0
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Build executable (Windows)
        if: matrix.os == 'windows-latest'
        run: npm run build:exe

      - name: Build executable (macOS)
        if: matrix.os == 'macos-latest'
        run: npx pkg package.json --targets node18-macos-x64 --output dist/ssbackend-macos

      - name: Build executable (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: npx pkg package.json --targets node18-linux-x64 --output dist/ssbackend-linux

      - name: Upload Release Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ssbackend-${{ matrix.os }}
          path: dist/*

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update README with latest release links
        run: |
          LATEST_TAG=${GITHUB_REF#refs/tags/}
          WIN_URL="https://github.com/${{ github.repository }}/releases/download/$LATEST_TAG/ssbackend.exe"
          MAC_URL="https://github.com/${{ github.repository }}/releases/download/$LATEST_TAG/ssbackend-macos"
          LINUX_URL="https://github.com/${{ github.repository }}/releases/download/$LATEST_TAG/ssbackend-linux"

          sed -i "s|\\(Latest Windows build:\\).*|\\1 [Download]($WIN_URL)|" README.md
          sed -i "s|\\(Latest macOS build:\\).*|\\1 [Download]($MAC_URL)|" README.md
          sed -i "s|\\(Latest Linux build:\\).*|\\1 [Download]($LINUX_URL)|" README.md

      - name: Commit updated README
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "docs: update README with latest release links [skip ci]" || echo "No changes to commit"
          git push
